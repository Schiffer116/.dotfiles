(deflisten song_title "playerctl metadata title --follow")
(deflisten cover_art "playerctl metadata mpris:artUrl --follow")
(deflisten player_status "playerctl status --follow")
(deflisten artist "playerctl metadata artist --follow")

(defvar show_media_buttons false)

;; (defpoll song_color :interval "3600s"
;;                     :run-while false
;;                     "dom-color.sh &")

(deflisten song_length "playerctl metadata --follow --format '{{ mpris:length / 1000000 }}'")
(defpoll song_pos :interval "1s"
                  :run-while true
                  "playerctl position")

(defwidget media_player []
  (revealer :reveal { player_status == "Playing" || player_status == "Paused" }
    (eventbox :onhover "${EWW_CMD} update show_media_buttons=true"
              :onhoverlost "${EWW_CMD} update show_media_buttons=false"
              :cursor "pointer"
      (box :space-evenly false
        (revealer :reveal show_media_buttons
                  :transition "slideleft"
          (eventbox :onclick "playerctl previous"
                    :class "media-button"
                    ""))
        (overlay
          (box :class "cover-art"
               :style "background-color: rgba(255, 255, 255, 1);")
          (button :class "cover-art"
                  :style "background-image: url('${cover_art}');")
          (revealer :reveal { player_status == "Paused" }
            (box :class "cover-art"
                 :style "background-color: rgba(0, 0, 0, 0.3);"))
          (revealer :reveal { player_status == "Paused" }
            (label :text ""
                   :style "color: white"))
          (button :onclick "playerctl play-pause"))
        (revealer :reveal show_media_buttons
                  :transition "slideright"
          (eventbox :onclick "playerctl next"
                    :class "media-button"
                    ""))))))

(defwindow song_info
  :stacking "bg"
  :exclusive false
  :focusable false
  :monitor 0
  :geometry (geometry
    :width 500
    :height 140
    :anchor "top right")
  (box :space-evenly false
       :spacing 15
    (box :orientation "vertical"
         :space-evenly false
         :style "color: white;"
         :hexpand true
      (label :wrap true
             :markup "<b>${song_title}</b>"
             :style 'font-family: "JetBrains Mono";'
             :xalign 0)
      (label :text " "
             :xalign 0)
      (label :markup "<i>${artist}</i>"
             :xalign 0)
      (box :vexpand true)
      (box :vexpand true
        (scale :value song_pos
               :class "song-scale"
               :css ".song-scale highlight { background-color: green; }"
               :min 0
               :max song_length
               :onchange "playerctl position {}"
               :orientation "horizontal")))

    (box :class "cover-art-info"
         :style "background-image: url('${cover_art}');")
    ))
