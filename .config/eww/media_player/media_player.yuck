(deflisten song_title "playerctl metadata title --follow")
(deflisten cover_art "playerctl metadata mpris:artUrl --follow")
(deflisten player_status "playerctl status --follow")
(deflisten artist "playerctl metadata artist --follow")

(defvar show_media_buttons false)

;; (defpoll song_color :interval "3600s"
;;                     :run-while false
;;                     "dom-color.sh &")
;; (defpoll song_length :interval "3600s"
;;                      :run-while false
;;                      "playerctl metadata mpris:length")
;; (defpoll song_pos :interval "1s"
;;                   :run-while false
;;                   "playerctl position")

(defwidget media_player []
  (revealer :reveal { player_status == "Playing" || player_status == "Paused" }
    (eventbox :onrightclick "${EWW_CMD} open --toggle song_info"
              :onhover "${EWW_CMD} update show_media_buttons=true"
              :onhoverlost "${EWW_CMD} update show_media_buttons=false"
              :cursor "pointer"
      (box :space-evenly false
        (revealer :reveal show_media_buttons
                  :transition "slideleft"
          (eventbox :onclick "playerctl previous"
                    :class "media-button"
                    ""))
        (overlay
          (button :class "cover-art"
                  :style "background-image: url('${cover_art}');")
          (revealer :reveal { player_status == "Paused" }
            (box :class "cover-art"
                 :style "background-color: rgba(0, 0, 0, 0.3);"))
          (revealer :reveal { player_status == "Paused" }
            (label :text ""))
          (button :onclick "playerctl play-pause"))
        (revealer :reveal show_media_buttons
                  :transition "slideright"
          (eventbox :onclick "playerctl next"
                    :class "media-button"
                    ""))))))

(defwindow song_info
  :stacking "fg"
  :exclusive false
  :focusable false
  :monitor 0
  :geometry (geometry
    :width 450
    :height 140
    :anchor "top center")
  (box :class "song-info-container"
       :space-evenly false
       :spacing 15
    (box :class "cover-art-info"
         :style "background-image: url('${cover_art}');")
    (box :orientation "vertical"
         :space-evenly false
      (label :wrap true
             :markup song_title
             :xalign 0)
      (label :markup "<i>${artist}</i>"
             :wrap true
             :xalign 0)
      (box :vexpand true
        ;; (scale :value song_pos
        ;;        :class "song-scale"
        ;;        :css ".song-scale highlight { background-color: ${song_color}; }"
        ;;        :min 0
        ;;        :max { song_length / 1000000 }
        ;;        :onchange "playerctl position {}"
        ;;        :orientation "horizontal")
        ))))
